@page "/records/add"
@rendermode InteractiveServer

<div class="is-flex is-justify-content-center is-align-items-center">
    <EditForm FormName="AddRecord" Model="@CurrentRecord" OnValidSubmit="AddRecord">
        <div class="has-text-success-light box is-flex is-flex-direction-column is-align-items-center">
            <InputText @bind-Value="CurrentRecord.Title" class="input has-text-success-light m-1" placeholder="Title" />
            <InputText @bind-Value="CurrentRecord.Artist" class="input has-text-success-light m-1" placeholder="Artist" />
            <InputText @bind-Value="CurrentRecord.Genre" class="input has-text-success-light m-1" placeholder="Genre" />
            <InputText @bind-Value="CurrentRecord.SpotifyEmbed" class="input has-text-success-light m-1" placeholder="Spotify Embed Link" />
            <InputNumber @bind-Value="CurrentRecord.ArtistId" class="input has-text-success-light m-1" placeholder="Artist ID" />
            <InputNumber @bind-Value="CurrentRecord.ReleaseYear" class="input has-text-success-light m-1" placeholder="Release Year" />
            <button type="submit" class="button is-primary has-text-success-light has-background-grey-dark mt-2 ml-1">Add Record</button>
        </div>
    </EditForm>
</div>

<p class="has-text-grey-dark">@FormStatus</p>

@code
{
    private Record CurrentRecord = new();
    private string FormStatus = string.Empty;

    private async void AddRecord()
    {
        if (CurrentRecord.Title == null || CurrentRecord.Artist == null || CurrentRecord.Genre == null || CurrentRecord.ReleaseYear <= 0 || CurrentRecord.ArtistId <= 0 || CurrentRecord.SpotifyEmbed == null)
        {
            FormStatus = "Error in form, please try again";
            return;
        }

        using (HttpClient client = new())
        {
            var response = await client.PostAsJsonAsync($"https://localhost:7244/api/record", CurrentRecord);
        }
        FormStatus = $"{CurrentRecord.Title} successfully added!";
    }
}
