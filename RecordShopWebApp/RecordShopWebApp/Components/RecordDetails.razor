@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<div class="box columns has-2-cols m-5 is-multiline has-background-dark">
    <div class="column box has-background-grey-dark has-text-success-light p-2 m-4">
        <h3 class="is-size-3 has-text-weight-bold">@CurrentRecord.Title by @CurrentRecord.Artist</h3>
        <p>Record ID: @CurrentRecord.Id</p>
        <p>Artist ID: @CurrentRecord.ArtistId</p>
        <p>Genre: @CurrentRecord.Genre</p>
        <p>Release Year: @CurrentRecord.ReleaseYear</p> <br/><br/>
        <h4 class="is-size-4 has-text-weight-bold">Artist Biography</h4>
        <ArtistDescriptionLoader ArtistId="@CurrentRecord.ArtistId" />
    </div>
    <div class="box has-background-grey-dark m-4">
        <iframe style="border-radius:12px" src="@CurrentRecord.SpotifyEmbed" width="100%" height="352" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>
    </div>
</div>
<div class="is-flex is-justify-content-center is-align-items-center">
        <button class="button is-primary has-background-grey-dark has-text-success-light mb-2" @onclick="() => NavigateToUpdateRecord()">Update Record</button>
        <button class="button is-primary has-background-grey-dark has-text-danger ml-1 mb-2" @onclick="() => NavigateToDeleteRecord()">Delete Record</button>
</div>

@code
{
    [Parameter] public Record CurrentRecord { get; set; }

    private void NavigateToUpdateRecord()
    {
        NavigationManager.NavigateTo($"/records/update/{CurrentRecord.Id}");
    }
    private void NavigateToDeleteRecord()
    {
        NavigationManager.NavigateTo($"/records/delete/{CurrentRecord.Id}");
    }
}